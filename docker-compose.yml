version: "3.8"

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    networks:
      - app-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://db:3306/note_app
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
      # OpenTelemetry
      - OTEL_SERVICE_NAME=backend-app
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4318
      - OTEL_TRACES_EXPORTER=otlp
      - OTEL_METRICS_EXPORTER=none
    networks:
      - app-network
    depends_on:
      db:
        condition: service_healthy
      loki:
        condition: service_started
      otel-collector:
        condition: service_started
    volumes:
      - ./backend/logs:/var/log/backend-app

  db:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: note_app
    ports:
      - "3308:3306"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      retries: 5
      start_period: 30s

  loki:
    image: grafana/loki:2.9.0
    container_name: loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./backend/loki-config.yaml:/etc/loki/local-config.yaml
      - ./backend/loki-wal:/wal
    networks:
      - app-network

  promtail:
    image: grafana/promtail:2.9.0
    container_name: promtail
    volumes:
      - ./backend/promtail/promtail-config.yaml:/etc/promtail/config.yaml
      - ./backend/logs:/var/log/backend-app
    command: -config.file=/etc/promtail/config.yaml
    networks:
      - app-network
    depends_on:
      - loki

  grafana:
    image: grafana/grafana:10.1.4
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - app-network
    depends_on:
      - loki
      - tempo

  tempo:
    image: grafana/tempo:2.4.1
    container_name: tempo
    ports:
      - "3200:3200"
    command: [ "-config.file=/etc/tempo/tempo.yaml" ]
    volumes:
      - ./backend/tempo/tempo.yaml:/etc/tempo/tempo.yaml
      - ./backend/tempo-data:/var/tempo
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "wget", "--spider", "-q", "http://localhost:3200/ready" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s




  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.84.0
    container_name: otel-collector
    command: [ "--config=/etc/otel-collector-config.yaml" ]
    volumes:
      - ./backend/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    networks:
      - app-network
    depends_on:
      tempo:
        condition: service_healthy




networks:
  app-network:
    driver: bridge
